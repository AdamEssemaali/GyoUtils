Version: 0.1.2 
---------------------------------

all files:
    Defined some macros to automatically import `first.h` if you include just a single module like `math.h`
    Same thing with performance counter and `profiling_v1.h`, `simple_benchmark.h` and `simple_profiling.h`
    Some general cleaning in `profiling_v1.h` (private variables and used ANCHORS_AMT define)

Version: 0.1.1 
---------------------------------

module simple_benchmark:
    Added macros BENCHMARK_COMPARE and BENCHMARK_COMPARE_VOID to quickly benchmark 2 functions with the same inputs, to know if the second one is faster or slower. You can find comments on how they work inside the module.


Version: 0.1.0 2023/09/16
---------------------------------

First release of gyoutils. Here's most of the stuff it includes (in no particular order):

Dynamic array 'Array<T>', a simple replacement to std::vector.
Basic types s8, u8, s16, u16, s32, u32, s64, u64, f32, f64.
Max and Min values for integer types.
A quicker alternative to printf called 'print', easily extendable.
An alternative to print for single line printing, called 'printsl'.
ASSERT macro with custom message printing and debug breaking.
defer macro for memory/resource deinitialization, can be used with any code.
math functions and values (there's a lot, principal are vec2/3/4 and mat4, sin and cos using turns instead of radians making them faster than most other implementations).
Basic performance counters.
Basic function/block profiling, handling inner and recursive functions too.
Basic benchmarking, repeating a piece of code many times to analyze it's performance.
str and str_builders, a simple replacement to std::string.
windows file handling utility functions to simplify working with files.
